<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="Commu">

<select id="AfterBbslist" resultType="www.tours2us.com.model.CommuAfterBbsDto">
	SELECT A.SEQ, A.TARGET_PLANER_SEQ, A.TARGET_USER_SEQ, 
    	A.TITLE, A.CONTENT, A.REG_DATE, A.LAST_UPDATED, A.STATUS, B.NAME
    FROM AFTERBBS A, TRAVELER B
    WHERE A.TARGET_USER_SEQ = B.SEQ
    ORDER BY A.REG_DATE DESC    
</select>

<insert id="AfterWrite" parameterType="www.tours2us.com.model.CommuAfterBbsDto">
		INSERT INTO AFTERBBS
		(SEQ,TARGET_PLANER_SEQ,TARGET_USER_SEQ,TITLE,CONTENT,REG_DATE,LAST_UPDATED,STATUS,READCOUNT)
		VALUES(AFTERBBS_SEQ.NEXTVAL,#{target_planer_seq},#{target_user_seq},#{title},#{content},SYSDATE,SYSDATE,0,0)
		
</insert>


<select id="AftergetBbs"
	parameterType="int"
	resultType="www.tours2us.com.model.CommuAfterBbsDto">
		SELECT*FROM
		(SELECT A.SEQ, A.TARGET_PLANER_SEQ, A.TARGET_USER_SEQ, 
         A.TITLE, A.CONTENT, A.REG_DATE, A.LAST_UPDATED, A.STATUS, A.READCOUNT, B.NAME, B.EMAIL, B.PROFILE,
          LEAD(A.TITLE,1) OVER(ORDER BY A.reg_date DESC) NEXT_TITLE,
     	LEAD(A.SEQ,1,0) OVER(ORDER BY A.reg_date DESC) NEXT_SEQ,
     	Lag(A.TITLE,1) OVER(ORDER BY A.reg_date DESC) PREV_TITLE,
     	Lag(A.SEQ,1,0) OVER(ORDER BY A.reg_date DESC) PREV_SEQ         
      	FROM AFTERBBS A, TRAVELER B
		WHERE  A.TARGET_USER_SEQ = B.SEQ) WHERE SEQ=#{seq} AND STATUS=0
	</select>

	<update id="AfterUpdateBbs" parameterType="www.tours2us.com.model.CommuAfterBbsDto">
		UPDATE AFTERBBS SET TITLE=#{title}, CONTENT=#{content}
		WHERE SEQ=#{seq}
	</update>
	
	<!-- 삭제 -->
	<update id="AfterdeleteBbs" parameterType="int">
		UPDATE AFTERBBS SET STATUS=1
		WHERE SEQ=#{seq} 	
	</update>
	
	<!-- 댓글List -->
	<select id="getAllComments" resultType="www.tours2us.com.model.CommuAfterCommentDto">
			SELECT  A.SEQ, A.TARGET_USER_SEQ, A.TARGET_BBS_SEQ, A.CONTENT, A.REG_DATE, A.LAST_UPDATED, A.STATUS, B.NAME, B.PROFILE 
			FROM AFTERBBSCOMMENT A, TRAVELER B 
			WHERE A.TARGET_USER_SEQ = B.SEQ AND 
			TARGET_BBS_SEQ=#{target_bbs_seq} AND 
			STATUS=0 ORDER BY REG_DATE DESC
	</select>
		
	<!-- 댓글 쓰기 -->
	<insert id="AfterAddComent" parameterType="www.tours2us.com.model.CommuAfterCommentDto">
		INSERT INTO AFTERBBSCOMMENT (SEQ,TARGET_USER_SEQ,TARGET_BBS_SEQ,CONTENT,REG_DATE,LAST_UPDATED,STATUS)
		VALUES(AFTERBBSCOMMENT_SEQ.NEXTVAL,#{target_user_seq},#{target_bbs_seq},#{content},SYSDATE,SYSDATE,0)
	</insert>
	<!-- 댓글 시퀀스 가져오기 -->
	<select id="AfterCommentgetUserSeq"
	parameterType="www.tours2us.com.model.CommuAfterCommentDto"
	resultType="int">
	SELECT TARGET_USER_SEQ FROM AFTERBBSCOMMENT WHERE SEQ=#{seq}
	</select>
	
	<!-- 댓글 삭제 -->
	<update id="AfterComentDelete" parameterType="int">
		UPDATE AFTERBBSCOMMENT SET STATUS=1
		WHERE SEQ=#{seq} 	
	</update>
	
	
<!--==============================paging가져오기======================================-->	
<select id="AftergetBbsPagingList"
	parameterType="www.tours2us.com.model.CommuAfterBbsDto"
	resultType="www.tours2us.com.model.CommuAfterBbsDto">
	SELECT SEQ, TARGET_PLANER_SEQ, TARGET_USER_SEQ, TITLE, 
	CONTENT, REG_DATE, LAST_UPDATED, STATUS , NAME , EMAIL, LIKE_COUNT, COMMENT_COUNT, READCOUNT 
	FROM
	(SELECT ROW_NUMBER() OVER (ORDER BY A.REG_DATE DESC) as rnum,
	 A.SEQ, A.TARGET_PLANER_SEQ, A.TARGET_USER_SEQ, 
         A.TITLE, A.CONTENT, A.REG_DATE, A.LAST_UPDATED, A.STATUS, A.READCOUNT, B.NAME, B.EMAIL,
         (select count(*) from liketable C where A.seq = C.target_bbs_seq and C.bbs_category=1) as like_count,
        (SELECT COUNT(*) FROM AFTERBBSCOMMENT D WHERE D.TARGET_BBS_SEQ = A.SEQ  and d.status=0 ) AS COMMENT_COUNT
      	FROM AFTERBBS A, TRAVELER B
	WHERE A.TARGET_USER_SEQ = B.SEQ AND STATUS=0
	 <if test="s_category != '' and s_category != null and s_keyword != '' and s_keyword != null">
		<if test="s_category == 'title'"> AND TITLE like '%'||#{s_keyword}||'%'</if>	
		<if test="s_category == 'contents'"> AND CONTENT like '%'||#{s_keyword}||'%'</if>
		<if test="s_category == 'name'"> AND NAME like '%'||#{s_keyword}||'%'</if>
	</if>
	) A
	WHERE rnum between #{start} AND #{end}	
</select>

<update id="AfterReadCount" parameterType="java.lang.Integer">
		UPDATE AFTERBBS SET READCOUNT=READCOUNT+1
		WHERE SEQ=#{seq}
</update>

<select id="AfterGetBbsCount"
	parameterType="www.tours2us.com.model.CommuAfterBbsDto"
	resultType="int">
	
	SELECT NVL(COUNT(*),0) AS cnt
	FROM AFTERBBS WHERE 1 = 1
	
	<if test="s_category != '' and s_category != null and s_keyword != '' and s_keyword != null">
		<if test="s_category == 'title'"> AND TITLE like '%'||#{s_keyword}||'%'</if>	
		<if test="s_category == 'contents'"> AND CONTENT like '%'||#{s_keyword}||'%'</if>
	</if>
</select>

<select id="bestAfter" resultType="www.tours2us.com.model.CommuAfterBbsDto">
SELECT RNUM, TITLE, SEQ, CONTENT, NAME, LIKE_COUNT, COMMENT_COUNT
		FROM
		(	select ROW_NUMBER() OVER (ORDER BY LIKE_COUNT DESC) AS RNUM, TITLE, SEQ, CONTENT, NAME, LIKE_COUNT, COMMENT_COUNT
			from (
				select TITLE, E.SEQ, CONTENT, T.NAME, (select count(*) from liketable C where E.seq = C.target_bbs_seq and C.bbs_category=1) as like_count,
				(SELECT COUNT(*) FROM AFTERBBSCOMMENT D WHERE D.TARGET_BBS_SEQ = E.SEQ  and d.status=0 ) AS COMMENT_COUNT
				FROM AFTERBBS E, TRAVELER T
				WHERE T.SEQ = E.TARGET_USER_SEQ AND STATUS = 0
				ORDER BY LIKE_COUNT DESC
			) SUB
		) A
		WHERE RNUM BETWEEN 1 AND 10
</select>



<!--==============================FreeBbs======================================-->
<select id="FreeBbsList" resultType="www.tours2us.com.model.CommuFreeBbsDto">
	SELECT F.SEQ, F.TARGET_CATEGORY_SEQ, F.TARGET_USER_SEQ, 
    	F.TITLE, F.CONTENT, F.REG_DATE, F.LAST_UPDATED, F.STATUS, T.NAME
    FROM FREEBBS F, TRAVELER T
    WHERE F.TARGET_USER_SEQ = T.SEQ
    ORDER BY F.REG_DATE DESC    
</select>

<select id="FreeCategory" resultType="www.tours2us.com.model.CommuFreeCategoryDto">
	SELECT * FROM FREECATEGORY 
</select>

<insert id="FreeBbsWrite" parameterType="www.tours2us.com.model.CommuFreeBbsDto">
		INSERT INTO FREEBBS
		(SEQ,TARGET_CATEGORY_SEQ,TARGET_USER_SEQ,TITLE,CONTENT,REG_DATE,LAST_UPDATED,STATUS,READCOUNT)
		VALUES(FREEBBS_SEQ.NEXTVAL,#{target_category_seq},#{target_user_seq},#{title},#{content},SYSDATE,SYSDATE,0,0)		
</insert>

<select id="FreeBbsDetail"
	parameterType="int"
	resultType="www.tours2us.com.model.CommuFreeBbsDto">
		SELECT*FROM
		(SELECT F.SEQ, F.TARGET_CATEGORY_SEQ, F.TARGET_USER_SEQ,(SELECT TITLE FROM FREECATEGORY WHERE SEQ = F.TARGET_CATEGORY_SEQ) AS CATEGORY, 
    	F.TITLE, F.CONTENT, F.REG_DATE, F.LAST_UPDATED, F.STATUS,F.READCOUNT ,T.NAME, T.EMAIL, T.PROFILE,
    	 LEAD(F.TITLE,1) OVER(ORDER BY F.reg_date DESC) NEXT_TITLE,
     	LEAD(F.SEQ,1,0) OVER(ORDER BY F.reg_date DESC) NEXT_SEQ,
     	Lag(F.TITLE,1) OVER(ORDER BY F.reg_date DESC) PREV_TITLE,
     	Lag(F.SEQ,1,0) OVER(ORDER BY F.reg_date DESC) PREV_SEQ         
      	FROM FREEBBS F, TRAVELER T
		WHERE  F.TARGET_USER_SEQ = T.SEQ AND STATUS=0)WHERE  SEQ=#{seq}
</select>

<update id="FreeBbsUpdate" parameterType="www.tours2us.com.model.CommuFreeBbsDto">
		UPDATE FREEBBS SET TITLE=#{title}, CONTENT=#{content}
		WHERE SEQ=#{seq}
</update>

<update id="FreeDeleteBbs" parameterType="int">
		UPDATE FREEBBS SET STATUS=1
		WHERE SEQ=#{seq} 	
</update>

<update id="FreeReadCount" parameterType="java.lang.Integer">
		UPDATE FREEBBS SET READCOUNT=READCOUNT+1
		WHERE SEQ=#{seq}
</update>


<!-- 댓글List -->
<select id="FreeGetAllComments" resultType="www.tours2us.com.model.CommuFreeCommentDto">
		SELECT  F.SEQ, F.TARGET_USER_SEQ, F.TARGET_FREE_SEQ, F.CONTENT, F.REG_DATE, F.LAST_UPDATED, F.STATUS, T.NAME,T.PROFILE  
		FROM FREEBBSCOMMENT F, TRAVELER T 
		WHERE F.TARGET_USER_SEQ = T.SEQ AND 
		TARGET_FREE_SEQ=#{target_free_seq} AND STATUS=0 ORDER BY REG_DATE DESC
</select>

<!-- 댓글 쓰기 -->
<insert id="FreeAddComent" parameterType="www.tours2us.com.model.CommuFreeCommentDto">
	INSERT INTO FREEBBSCOMMENT (SEQ,TARGET_USER_SEQ,TARGET_FREE_SEQ,CONTENT,REG_DATE,LAST_UPDATED,STATUS)
	VALUES(FREEBBSCOMMENT_SEQ.NEXTVAL,#{target_user_seq},#{target_free_seq},#{content},SYSDATE,SYSDATE,0)
</insert>

<!-- 댓글 시퀀스 가져오기 -->
<select id="FreeCommentgetUserSeq"
parameterType="www.tours2us.com.model.CommuFreeCommentDto"
resultType="int">
SELECT TARGET_USER_SEQ FROM FREEBBSCOMMENT WHERE SEQ=#{seq}
</select>

<!-- 댓글 삭제 -->
<update id="FreeComentDelete" parameterType="int">
	UPDATE FREEBBSCOMMENT SET STATUS=1
	WHERE SEQ=#{seq} 	
</update>

<!--==============================paging가져오기======================================-->	
<select id="FreeGetBbsPagingList"
	parameterType="www.tours2us.com.model.CommuFreeBbsDto"
	resultType="www.tours2us.com.model.CommuFreeBbsDto">
	SELECT SEQ, TARGET_CATEGORY_SEQ, TARGET_USER_SEQ, 
    	TITLE, CONTENT, REG_DATE, LAST_UPDATED, STATUS, NAME, EMAIL, LIKE_COUNT, COMMENT_COUNT
	FROM
	(SELECT ROW_NUMBER() OVER (ORDER BY F.REG_DATE DESC) as rnum,
	 F.SEQ, F.TARGET_CATEGORY_SEQ, F.TARGET_USER_SEQ, 
         F.TITLE, F.CONTENT, F.REG_DATE, F.LAST_UPDATED, F.STATUS, T.NAME, T.EMAIL, 
          (select count(*) from liketable C where F.seq = C.target_bbs_seq and C.bbs_category=4) as like_count,
        (SELECT COUNT(*) FROM FREEBBSCOMMENT D WHERE D.TARGET_FREE_SEQ = F.SEQ  and d.status=0 ) AS COMMENT_COUNT
      	FROM FREEBBS F, TRAVELER T
	WHERE F.TARGET_USER_SEQ = T.SEQ AND STATUS=0
	 <if test="s_category != '' and s_category != null and s_keyword != '' and s_keyword != null">
		<if test="s_category == 'title'"> AND TITLE like '%'||#{s_keyword}||'%'</if>	
		<if test="s_category == 'contents'"> AND CONTENT like '%'||#{s_keyword}||'%'</if>
		<if test="s_category == 'name'"> AND NAME like '%'||#{s_keyword}||'%'</if>
	</if>
	) A
	WHERE rnum between #{start} AND #{end}	
</select>

<select id="FreeGetBbsCount"
	parameterType="www.tours2us.com.model.CommuFreeBbsDto"
	resultType="int">
	
	SELECT NVL(COUNT(*),0) AS cnt
	FROM FREEBBS WHERE 1 = 1
	
	<if test="s_category != '' and s_category != null and s_keyword != '' and s_keyword != null">
		<if test="s_category == 'title'"> AND TITLE like '%'||#{s_keyword}||'%'</if>	
		<if test="s_category == 'contents'"> AND CONTENT like '%'||#{s_keyword}||'%'</if>
	</if>
</select>








</mapper>